@using System.Web
@model List<BusinessLayer.DTO.GetIndexOHLCVDTO>
@{
    ViewData["Title"] = "OHLCV";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string ticker = ViewBag.ticker;
    string axisy = ViewBag.axisy;
    string name = ViewBag.name;

    Func<BusinessLayer.DTO.GetIndexOHLCVDTO, object> selector = null;

    switch (axisy)
    {
        case "opening_price":
            selector = stock => stock.opening_price;
            break;
        case "high_price":
            selector = stock => stock.high_price;
            break;
        case "low_price":
            selector = stock => stock.low_price;
            break;
        case "closing_price":
            selector = stock => stock.closing_price;
            break;
        case "trading_volume":
            selector = stock => stock.trading_volume;
            break;
        case "transaction_amount":
            selector = stock => stock.transaction_amount;
            break;
        case "market_value":
            selector = stock => stock.market_value;
            break;

    }
    var dataPoints = Model.Select(selector).ToList();
    var dataJson = Newtonsoft.Json.JsonConvert.SerializeObject(dataPoints);
}

<div class="d-flex justify-content-between align-items-center my-4 w-100">
    <div class="flex-grow-1 text-center">
        <h1 class="mb-0">@ViewBag.name (@ViewBag.ticker)@ViewBag.Query</h1>
    </div>
</div>

<div class="centered-container">
    <canvas id="chart" width="1600" height="900"></canvas>
</div>




<script charset="UTF-8">
    document.addEventListener('DOMContentLoaded', function () {
        const tradeDates = @Html.Raw(Json.Serialize(Model.Select(m => m.trade_date.ToShortDateString())));
        const y = @Html.Raw(dataJson);
        const title = '@axisy';
        const dataSets = [{
            data: y,
            label: title,
            borderColor: "#3e95cd",
            fill: false,
            lineTension: 0.1
        }];
        createLineChart('chart', tradeDates, dataSets, 'World population per region (in millions)');
    });
</script>




<ul class="nav nav-tabs justify-content-center">
    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("OHLCV", "index", new { ticker = ticker, axisy = "opening_price" })">시가</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("OHLCV", "index", new { ticker = ticker, axisy = "high_price" })">고가</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("OHLCV", "index", new { ticker = ticker, axisy = "low_price" })">저가</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("OHLCV", "index", new { ticker = ticker, axisy = "closing_price" })">종가</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("OHLCV", "index", new { ticker = ticker, axisy = "trading_volume" })">거래량</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("OHLCV", "index", new { ticker = ticker, axisy = "transaction_amount" })">거래대금</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@Url.Action("OHLCV", "index", new { ticker = ticker, axisy = "market_value" })">시가총액</a>
    </li>
</ul>




<div class="scrollable-table">
    <table class="table table-hover">
        <thead class="table-light">
            <tr>
                <th>시가</th>
                <th>고가</th>
                <th>저가</th>
                <th>종가</th>
                <th>거래량</th>
                <th>거래대금</th>
                <th>시가총액</th>
                <th>거래일</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stock in Model)
            {
                <tr>
                    <td>@stock.opening_price.ToString("N2")</td>
                    <td>@stock.high_price.ToString("N2")</td>
                    <td>@stock.low_price.ToString("N2")</td>
                    <td>@stock.closing_price.ToString("N2")</td>
                    <td>@stock.trading_volume.ToString("N0")</td>
                    <td>@stock.transaction_amount.ToString("N0")</td>
                    <td>@stock.market_value.ToString("N0")</td>
                    <td>@stock.trade_date.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
</div>
