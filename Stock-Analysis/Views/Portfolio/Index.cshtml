@model IEnumerable<BusinessLayer.DTO.GetPortfolioDTO>

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
	int totalPurchaseCost = ViewBag.totalPurchaseCost;
	int totalValuationProfitLossCost = ViewBag.totalValuationProfitLossCost;
	int totalValuationCost = ViewBag.totalValuationCost;
	double totalProfitLossPercentage = ViewBag.totalProfitLossPercentage;

}
<div class="container mt-5">
	<div class="row justify-content-center mb-3">
		<h2 class="text-center">포트폴리오</h2>
	</div>
	<div class="row">
		<div class="col-md-3">
			<p><strong>총매수금액 : \ </strong> @totalPurchaseCost.ToString("N0")</p>
		</div>
		<div class="col-md-3">
			<p><strong>총평가손익 : \</strong> @totalValuationProfitLossCost.ToString("N0")</p>
		</div>
		<div class="col-md-3">
			<p><strong>총평가금액 : \</strong> @totalValuationCost.ToString("N0")</p>
		</div>
		<div class="col-md-3">
			<p><strong>총평가손익률 : </strong> @totalProfitLossPercentage.ToString("N2")%</p>
		</div>
	</div>
</div>

<div class="container mt-5">
	<h4 class="mb-3">종목별 매수 정보</h4>
	<div class="scrollable-table">
		<table class="table table-hover">
			<thead class="table-light">
				<tr>
					<th>티커</th>
					<th>종목명</th>
					<th>수량</th>
					<th>평균 매수단가</th>
					<th>현재가</th>
					<th>합계</th>
					<th>평가금액</th>
					<th>평가손익</th>
					<th>손익률</th>
					<th>시장</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var group in Model.GroupBy(stock => stock.ticker).Select(g => new
				{
					ticker = g.Key,
					name = g.First().name,
					market = g.First().market,
					totalAmount = g.Sum(stock => stock.amount),
					averageUnitPrice = g.Sum(stock => stock.unit_price * stock.amount) / (double)g.Sum(stock => stock.amount),
					currentPrice = g.First().current_price,
					totalValue = g.Sum(stock => stock.TotalValue),
					valuation = g.Sum(stock => stock.amount * stock.current_price),
					profitLoss = g.Sum(stock => (stock.current_price - stock.unit_price) * stock.amount),
					profitLossPercentage = g.Sum(stock => stock.unit_price * stock.amount) != 0
									? (g.Sum(stock => (stock.current_price - stock.unit_price) * stock.amount) / (double)g.Sum(stock => stock.unit_price * stock.amount)) * 100
									: 0
				}))
				{
					<tr>
						<td>@group.ticker</td>
						<td>@group.name</td>
						<td>@group.totalAmount.ToString("N0")</td>
						<td>\@group.averageUnitPrice.ToString("N0")</td>
						<td>\@Convert.ToInt32(group.currentPrice).ToString("N0")</td>
						<td>\@Convert.ToInt32(group.totalValue).ToString("N0")</td>
						<td>\@Convert.ToInt32(group.valuation).ToString("N0")</td>
						<td>\@Convert.ToInt32(group.profitLoss).ToString("N0")</td>
						<td>@Convert.ToDouble(group.profitLossPercentage).ToString("N2")%</td>
						<td>@group.market</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>


<div class="container mt-5">
	<h4 class="mb-3">매수 기록</h4>
	<div class="scrollable-table">
		<table class="table table-hover">
			<thead class="table-light">
				<tr>
					<th>티커</th>
					<th>종목명</th>
					<th>수량</th>
					<th>매수단가</th>
					<th>현재가</th>
					<th>합계</th>
					<th>시장</th>
					<th>삭제</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var stock in Model)
				{
					<tr>
						<td>@stock.ticker.ToString()</td>
						<td>@stock.name.ToString()</td>
						<td>@stock.amount.ToString("N0")</td>
						<td>\@stock.unit_price.ToString("N0")</td>
						<td>\@Convert.ToInt32(stock.current_price).ToString("N0")</td>
						<td>\@stock.TotalValue.ToString("N0")</td>
						<td>@stock.market.ToString()</td>
						<td><button class="btn btn-danger delete-btn" data-id="@stock.id">삭제</button></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>